.data
_string_ : .asciiz "\n"
.text
# ADD 0 0->i
				# load 0->$t0
    li $t0 0
				# load 0->$t1
    li $t1 0
    add $t0 $t0 $t1
				# store $t0->i
    sw $t0 -0($sp)
# ADD 1 0->j
				# load 1->$t0
    li $t0 1
				# load 0->$t1
    li $t1 0
    add $t0 $t0 $t1
				# store $t0->j
    sw $t0 -4($sp)
# ADD 2 0->k
				# load 2->$t0
    li $t0 2
				# load 0->$t1
    li $t1 0
    add $t0 $t0 $t1
				# store $t0->k
    sw $t0 -8($sp)
# call function fun
    addi $s0 $sp -12
				# load i->$t1
				# offset: 0 no: 0
    lw $t1 -0($sp)
# para_name:i
    sw $t1 -8($s0)
				# load j->$t1
				# offset: 4 no: 0
    lw $t1 -4($sp)
# para_name:j
    sw $t1 -12($s0)
				# load i->$t1
				# offset: 0 no: 0
    lw $t1 -0($sp)
# para_name:i
    sw $t1 -16($s0)
				# load j->$t1
				# offset: 4 no: 0
    lw $t1 -4($sp)
# para_name:j
    sw $t1 -20($s0)
				# load k->$t1
				# offset: 8 no: 0
    lw $t1 -8($sp)
# para_name:k
    sw $t1 -24($s0)
    move $sp $s0
    li $t1 12
    sw $t1 0($s0)
    jal fun
# ADD RET 0->LRY1
				# load 0->$t1
    li $t1 0
    add $t0 $v0 $t1
				# store $t0->LRY1
    sw $t0 -12($sp)
# call function fun
    addi $s0 $sp -16
				# load LRY1->$t1
				# offset: 12 no: 0
    lw $t1 -12($sp)
# para_name:LRY1
    sw $t1 -8($s0)
    move $sp $s0
    li $t1 16
    sw $t1 0($s0)
    jal fun
# ADD RET 0->LRY2
				# load 0->$t1
    li $t1 0
    add $t0 $v0 $t1
				# store $t0->LRY2
    sw $t0 -16($sp)
# ADD LRY2 0->k
				# load LRY2->$t0
				# offset: 16 no: 0
    lw $t0 -16($sp)
				# load 0->$t1
    li $t1 0
    add $t0 $t0 $t1
				# store $t0->k
    sw $t0 -8($sp)
# print k
				# load k->$a0
				# offset: 8 no: 0
    lw $a0 -8($sp)
    li $v0 1
    syscall
# print \n
    li $v0 4
    la $a0 _string_
    syscall
exit:
# program exit
    li $v0 10
    syscall
fun:
    sw $ra -4($sp)
# in func______
# ADD a b->LRY0
				# load a->$t0
				# offset: 8 no: 0
    lw $t0 -8($sp)
				# load b->$t1
				# offset: 12 no: 0
    lw $t1 -12($sp)
    add $t0 $t0 $t1
				# store $t0->LRY0
    sw $t0 -20($sp)
# ADD LRY0 0->c
				# load LRY0->$t0
				# offset: 20 no: 0
    lw $t0 -20($sp)
				# load 0->$t1
    li $t1 0
    add $t0 $t0 $t1
				# store $t0->c
    sw $t0 -16($sp)
# print a
				# load a->$a0
				# offset: 8 no: 0
    lw $a0 -8($sp)
    li $v0 1
    syscall
# print \n
    li $v0 4
    la $a0 _string_
    syscall
# print b
				# load b->$a0
				# offset: 12 no: 0
    lw $a0 -12($sp)
    li $v0 1
    syscall
# print \n
    li $v0 4
    la $a0 _string_
    syscall
# print c
				# load c->$a0
				# offset: 16 no: 0
    lw $a0 -16($sp)
    li $v0 1
    syscall
# print \n
    li $v0 4
    la $a0 _string_
    syscall
				# load c->$v0
				# offset: 16 no: 0
    lw $v0 -16($sp)
    lw $t1 0($sp)
    lw $ra -4($sp)
    add $sp $sp $t1
    jr $ra
# out func______
