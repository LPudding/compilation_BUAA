.data
_strings_ : .asciiz "\n"
.text
j main
#midCode FUNC add INT 
#midCode PARA a INT 
#midCode PARA b INT 
#midCode FUNCHEAD add  
#midCode ADD INT1 a b
# ADD a b->INT1
    add $t3 $a1 $a2
#midCode FUNCRET INT1  
    move $v0 $t3
#midCode FUNCTAIL   
#midCode FUNC print VOID 
#midCode PARA a INT 
#midCode FUNCHEAD print  
#midCode PRINT a 1 INT
    lw $a0 -4($sp)
    li $v0 1
    syscall
    li $v0 4
    la $a0 _strings_
    syscall
#midCode FUNCRET   
#midCode FUNCTAIL   
#midCode MAINHEAD   
main:
#midCode CONST a INT 10
    li $t0 10
    sw $t0 -0($sp)
#midCode VAR s INT 10
#midCode PUSH_PARA a add 131073
#midCode PUSH_PARA 5 add 131072
#midCode CALL_FUNC add  
# call function add
    lw $a1 -0($sp)
    li $a2 5
    addi $sp $sp -48
    add $t3 $a1 $a2
    move $v0 $t3
    addi $sp $sp 48
#midCode ADD INT2 RET 0
# ADD RET 0->INT2
    addi $t3 $v0 0
#midCode PUSH_PARA INT2 print 65536
#midCode CALL_FUNC print  
# call function print
    sw $t3 -56($sp)
    addi $sp $sp -52
    lw $a0 -4($sp)
    li $v0 1
    syscall
    li $v0 4
    la $a0 _strings_
    syscall
    addi $sp $sp 52
#midCode EXIT   
########################### exit:
    li $v0 10
    syscall
#0:a
#1:s
#2:INT2
